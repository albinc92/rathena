//===== rAthena Script =======================================
//= OnPCLoginEvent Triple Scanner
//===== Compatible With: =====================================
//= rAthena emulator
//===== Description: =========================================
//= Scan process following:
//= 1. Authorized GM name check.
//= 2. Player max stats > 250 check.
//= 3. Total actual player statpoint check.
//= Intruder will be blocked / query ipbanlist.
//===== Information: =========================================
//= Original version statpoints check by Brian
//============================================================

-	script	Login Scanner	-1,{

OnPCLoginEvent:
set .@name$,strcharinfo(0);
set .@ipbannumber$,getcharip(strcharinfo(0));
if ( getgmlevel() > 0 || getgroupid() > 0 ) {	// GM level/group config
	//==== Authorized GM Checker =============================================
		if ( .@name$ == "GM Test" || .@name$ == "GM2" || .@name$ == "GM3" || .@name$ == "GM4" || .@name$ == "GM5") end;
		announce "Shield: "+.@name$+" from "+.@ipbannumber$+" was banned for login unauthorized GM account.",bc_all;
		//atcommand "@block "+.@name$;
		debugmes .@name$+" was banned for login unauthorized GM account.";
		//query_sql "INSERT INTO ipbanlist (list,btime,rtime,reason) VALUES ('"+.@ipbannumber$+"','"+gettime(7)+"-"+gettime(6)+"-"+gettime(5)+" "+gettime(3)+":"+gettime(2)+":"+gettime(1)+"','2099-01-01 00:00:00','Unauthorized GM account')";
		end;
		}	// SETUP GM NAMES BEFORE ENABLED ATCOMMAND AND QUERY !!!!

	//==== Check Player Max Stats =============================================
		if (readparam(bStr) > 250 || readparam(bAgi) > 250 || readparam(bVit) > 250 || readparam(bInt) > 250 || readparam(bDex) > 250 || readparam(bLuk) > 250 ) {
		announce "Shield: "+.@name$+" from "+.@ipbannumber$+" was banned for having base stat more than 250.",bc_all;
		atcommand "@block "+.@name$;
		debugmes .@name$+" was banned for having base stat more than 250.";
		query_sql "INSERT INTO ipbanlist (list,btime,rtime,reason) VALUES ('"+.@ipbannumber$+"','"+gettime(7)+"-"+gettime(6)+"-"+gettime(5)+" "+gettime(3)+":"+gettime(2)+":"+gettime(1)+"','2099-01-01 00:00:00','Base stat more than 250')";
		end;
		}

	//==== Check Player Statpoints =============================================
	function pc_need_status_point; // src/map/pc.c
	function pc_maxparameter;
	function read_statpoint_table; // db/re/statpoint.txt OR db/pre-re/statpoint.txt
	//==== statpointcount() ====================================================
	set .@should_have, read_statpoint_table(BaseLevel) + ( Class&EAJ_UPPERMASK ? 52 : 0 ) + 20; // ADD 20 POINT FOR MARGIN ERROR SYSTEM FAULT
	set .@actual_statpoint,
		pc_need_status_point(bStr, 1-readparam(bStr)) +
		pc_need_status_point(bAgi, 1-readparam(bAgi)) +
		pc_need_status_point(bVit, 1-readparam(bVit)) +
		pc_need_status_point(bInt, 1-readparam(bInt)) +
		pc_need_status_point(bDex, 1-readparam(bDex)) +
		pc_need_status_point(bLuk, 1-readparam(bLuk)) +
		StatusPoint;
	//==========================================================================
	if (.@actual_statpoint > .@should_have) {
		announce "Shield: "+.@name$+" from "+.@ipbannumber$+" was banned for having more stat points than normal.",bc_all;
		atcommand "@block "+.@name$;
		debugmes .@name$+" was banned for having more stat points than normal.";
		query_sql "INSERT INTO ipbanlist (list,btime,rtime,reason) VALUES ('"+.@ipbannumber$+"','"+gettime(7)+"-"+gettime(6)+"-"+gettime(5)+" "+gettime(3)+":"+gettime(2)+":"+gettime(1)+"','2099-01-01 00:00:00','Extra stat points.')";
		}
	end;

function pc_need_status_point {
	set .@type, getarg(0);
	set .@val, getarg(1);

	if (.@val == 0)
		return 0;

	set .@low, readparam(.@type);

	if (.@low >= pc_maxparameter() && .@val > 0)
		return 0; // Official servers show '0' when max is reached

	set .@high, .@low + .@val;

	if (.@val < 0) {
		// swap(low, high);
		set .@TEMP, .@low;
		set .@low, .@high;
		set .@high, .@TEMP;
	}

	for ( ; .@low < .@high; set .@low, .@low +1) {
		if (checkre(0)) { // renewal status point cost formula
			set .@sp, .@sp + ((.@low < 100) ? (2 + (.@low - 1) / 10) : (16 + 4 * ((.@low - 100) / 5)));
		} else {
			set .@sp, .@sp + (( 1 + (.@low + 9) / 10 ));
		}
	}
	return .@sp;
}
function pc_maxparameter {
	return (
		( ((Class&EAJ_UPPERMASK) == EAJL_2_1|0x0A) || Class&EAJL_THIRD ?
		(Class&EAJL_BABY ? getbattleflag("max_baby_third_parameter") : getbattleflag("max_third_parameter"))
		: (Class&EAJL_BABY ? getbattleflag("max_baby_parameter") : getbattleflag("max_parameter"))
		)
	);
}
function read_statpoint_table {
	if (checkre(0)) {
		// db/re/statpoint.txt
		switch (getarg(0)) {
			case   1:  return 48;
			case   2:  return 51;
			case   3:  return 54;
			case   4:  return 57;
			case   5:  return 60;
			case   6:  return 64;
			case   7:  return 68;
			case   8:  return 72;
			case   9:  return 76;
			case  10:  return 80;
			case  11:  return 85;
			case  12:  return 90;
			case  13:  return 95;
			case  14:  return 100;
			case  15:  return 105;
			case  16:  return 111;
			case  17:  return 117;
			case  18:  return 123;
			case  19:  return 129;
			case  20:  return 135;
			case  21:  return 142;
			case  22:  return 149;
			case  23:  return 156;
			case  24:  return 163;
			case  25:  return 170;
			case  26:  return 178;
			case  27:  return 186;
			case  28:  return 194;
			case  29:  return 202;
			case  30:  return 210;
			case  31:  return 219;
			case  32:  return 228;
			case  33:  return 237;
			case  34:  return 246;
			case  35:  return 255;
			case  36:  return 265;
			case  37:  return 275;
			case  38:  return 285;
			case  39:  return 295;
			case  40:  return 305;
			case  41:  return 316;
			case  42:  return 327;
			case  43:  return 338;
			case  44:  return 349;
			case  45:  return 360;
			case  46:  return 372;
			case  47:  return 384;
			case  48:  return 396;
			case  49:  return 408;
			case  50:  return 420;
			case  51:  return 433;
			case  52:  return 446;
			case  53:  return 459;
			case  54:  return 472;
			case  55:  return 485;
			case  56:  return 499;
			case  57:  return 513;
			case  58:  return 527;
			case  59:  return 541;
			case  60:  return 555;
			case  61:  return 570;
			case  62:  return 585;
			case  63:  return 600;
			case  64:  return 615;
			case  65:  return 630;
			case  66:  return 646;
			case  67:  return 662;
			case  68:  return 678;
			case  69:  return 694;
			case  70:  return 710;
			case  71:  return 727;
			case  72:  return 744;
			case  73:  return 761;
			case  74:  return 778;
			case  75:  return 795;
			case  76:  return 813;
			case  77:  return 831;
			case  78:  return 849;
			case  79:  return 867;
			case  80:  return 885;
			case  81:  return 904;
			case  82:  return 923;
			case  83:  return 942;
			case  84:  return 961;
			case  85:  return 980;
			case  86:  return 1000;
			case  87:  return 1020;
			case  88:  return 1040;
			case  89:  return 1060;
			case  90:  return 1080;
			case  91:  return 1101;
			case  92:  return 1122;
			case  93:  return 1143;
			case  94:  return 1164;
			case  95:  return 1185;
			case  96:  return 1207;
			case  97:  return 1229;
			case  98:  return 1251;
			case  99:  return 1273;
			case 100:  return 1295;
			case 101:  return 1318;
			case 102:  return 1341;
			case 103:  return 1364;
			case 104:  return 1387;
			case 105:  return 1410;
			case 106:  return 1433;
			case 107:  return 1456;
			case 108:  return 1479;
			case 109:  return 1502;
			case 110:  return 1525;
			case 111:  return 1549;
			case 112:  return 1573;
			case 113:  return 1597;
			case 114:  return 1621;
			case 115:  return 1645;
			case 116:  return 1669;
			case 117:  return 1693;
			case 118:  return 1717;
			case 119:  return 1741;
			case 120:  return 1765;
			case 121:  return 1790;
			case 122:  return 1815;
			case 123:  return 1840;
			case 124:  return 1865;
			case 125:  return 1890;
			case 126:  return 1915;
			case 127:  return 1940;
			case 128:  return 1965;
			case 129:  return 1990;
			case 250:  return 2015;
			case 131:  return 2041;
			case 132:  return 2067;
			case 133:  return 2093;
			case 134:  return 2119;
			case 135:  return 2145;
			case 136:  return 2171;
			case 137:  return 2197;
			case 138:  return 2223;
			case 139:  return 2249;
			case 140:  return 2275;
			case 141:  return 2302;
			case 142:  return 2329;
			case 143:  return 2356;
			case 144:  return 2383;
			case 145:  return 2410;
			case 146:  return 2437;
			case 147:  return 2464;
			case 148:  return 2491;
			case 149:  return 2518;
			case 150:  return 2545;
			case 151:  return 2573; // 2573.3;
			case 152:  return 2601; // 2601.6;
			case 153:  return 2629; // 2629.9;
			case 154:  return 2657; // 2658.2;
			case 155:  return 2685; // 2686.5;
			case 156:  return 2713; // 2714.8;
			case 157:  return 2741; // 2743.1;
			case 158:  return 2770; // 2771.4;
			case 159:  return 2799; // 2799.7;
			case 160:  return 2828;
			case 161:  return 2857;
			case 162:  return 2886;
			case 163:  return 2915;
			case 164:  return 2944;
			case 165:  return 2974;
			case 166:  return 3004;
			case 167:  return 3034;
			case 168:  return 3064;
			case 169:  return 3094;
			case 170:  return 3124;
			case 171:  return 3154;
			case 172:  return 3185;
			case 173:  return 3216;
			case 174:  return 3247;
			case 175:  return 3278;
		}
	} else {
		// db/pre-re/statpoint.txt
		switch (getarg(0)) {
			case   1:  return 48;
			case   2:  return 51;
			case   3:  return 54;
			case   4:  return 57;
			case   5:  return 60;
			case   6:  return 64;
			case   7:  return 68;
			case   8:  return 72;
			case   9:  return 76;
			case  10:  return 80;
			case  11:  return 85;
			case  12:  return 90;
			case  13:  return 95;
			case  14:  return 100;
			case  15:  return 105;
			case  16:  return 111;
			case  17:  return 117;
			case  18:  return 123;
			case  19:  return 129;
			case  20:  return 135;
			case  21:  return 142;
			case  22:  return 149;
			case  23:  return 156;
			case  24:  return 163;
			case  25:  return 170;
			case  26:  return 178;
			case  27:  return 186;
			case  28:  return 194;
			case  29:  return 202;
			case  30:  return 210;
			case  31:  return 219;
			case  32:  return 228;
			case  33:  return 237;
			case  34:  return 246;
			case  35:  return 255;
			case  36:  return 265;
			case  37:  return 275;
			case  38:  return 285;
			case  39:  return 295;
			case  40:  return 305;
			case  41:  return 316;
			case  42:  return 327;
			case  43:  return 338;
			case  44:  return 349;
			case  45:  return 360;
			case  46:  return 372;
			case  47:  return 384;
			case  48:  return 396;
			case  49:  return 408;
			case  50:  return 420;
			case  51:  return 433;
			case  52:  return 446;
			case  53:  return 459;
			case  54:  return 472;
			case  55:  return 485;
			case  56:  return 499;
			case  57:  return 513;
			case  58:  return 527;
			case  59:  return 541;
			case  60:  return 555;
			case  61:  return 570;
			case  62:  return 585;
			case  63:  return 600;
			case  64:  return 615;
			case  65:  return 630;
			case  66:  return 646;
			case  67:  return 662;
			case  68:  return 678;
			case  69:  return 694;
			case  70:  return 710;
			case  71:  return 727;
			case  72:  return 744;
			case  73:  return 761;
			case  74:  return 778;
			case  75:  return 795;
			case  76:  return 813;
			case  77:  return 831;
			case  78:  return 849;
			case  79:  return 867;
			case  80:  return 885;
			case  81:  return 904;
			case  82:  return 923;
			case  83:  return 942;
			case  84:  return 961;
			case  85:  return 980;
			case  86:  return 1000;
			case  87:  return 1020;
			case  88:  return 1040;
			case  89:  return 1060;
			case  90:  return 1080;
			case  91:  return 1101;
			case  92:  return 1122;
			case  93:  return 1143;
			case  94:  return 1164;
			case  95:  return 1185;
			case  96:  return 1207;
			case  97:  return 1229;
			case  98:  return 1251;
			case  99:  return 1273;
			case 100:  return 1295;
			case 101:  return 1318;
			case 102:  return 1341;
			case 103:  return 1364;
			case 104:  return 1387;
			case 105:  return 1410;
			case 106:  return 1434;
			case 107:  return 1458;
			case 108:  return 1482;
			case 109:  return 1506;
			case 110:  return 1530;
			case 111:  return 1555;
			case 112:  return 1580;
			case 113:  return 1605;
			case 114:  return 1630;
			case 115:  return 1655;
			case 116:  return 1681;
			case 117:  return 1707;
			case 118:  return 1733;
			case 119:  return 1759;
			case 120:  return 1785;
			case 121:  return 1812;
			case 122:  return 1839;
			case 123:  return 1866;
			case 124:  return 1893;
			case 125:  return 1920;
			case 126:  return 1948;
			case 127:  return 1976;
			case 128:  return 2004;
			case 129:  return 2032;
			case 250:  return 2060;
			case 131:  return 2089;
			case 132:  return 2118;
			case 133:  return 2147;
			case 134:  return 2176;
			case 135:  return 2205;
			case 136:  return 2235;
			case 137:  return 2265;
			case 138:  return 2295;
			case 139:  return 2325;
			case 140:  return 2355;
			case 141:  return 2386;
			case 142:  return 2417;
			case 143:  return 2448;
			case 144:  return 2479;
			case 145:  return 2510;
			case 146:  return 2542;
			case 147:  return 2574;
			case 148:  return 2606;
			case 149:  return 2638;
			case 150:  return 2670;
			case 151:  return 2703;
			case 152:  return 2736;
			case 153:  return 2769;
			case 154:  return 2802;
			case 155:  return 2835;
			case 156:  return 2869;
			case 157:  return 2903;
			case 158:  return 2937;
			case 159:  return 2971;
			case 160:  return 3005;
			case 161:  return 3040;
			case 162:  return 3075;
			case 163:  return 3110;
			case 164:  return 3145;
			case 165:  return 3180;
			case 166:  return 3216;
			case 167:  return 3252;
			case 168:  return 3288;
			case 169:  return 3324;
			case 170:  return 3360;
			case 171:  return 3397;
			case 172:  return 3434;
			case 173:  return 3471;
			case 174:  return 3508;
			case 175:  return 3545;
		}
	}
	return 0; // BaseLevel out of range
}
}
